@model OrcamentoViewModel

@{
    ViewData["Title"] = "Orçamento";
}

<div class="row align-items-center">
    <div class="col-md-4 col-sm-12 my-auto d-flex justify-content-center  mb-4">
        <div class="d-flex align-items-center my-auto">
            <img class="img-fluid mt-4" src="~/images/undraw_Receipt_re_fre3.svg" width="200" />
        </div>
    </div>
    <div class="col-md-8 col-sm-12 mt-4">
        <div class="d-flex flex-wrap flex-column justify-content-center">
            @if (Model.Numero > 0)
            {
                <div>
                    <h3>Editar Orçamento</h3>
                </div>
            }
            else
            {
                <h3>Novo Orçamento</h3>
            }
        </div>
    </div>
</div>
<div class="row mt-2">
    <div class="col-12 d-flex mr-auto mb-4">
        <a href="/orcamento/list" class="btn btn-outline-secondary d-inline ml-auto"><i class="fa fa-chevron-left"></i> Voltar</a>
    </div>
    <div class="col-12 border rounded py-4">
        <form method="post" id="form-crud">
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="EmpresaId" />
            <input type="hidden" asp-for="Numero" />
            <input type="hidden" asp-for="CreatedDate" />
            <div asp-validation-summary="All" class="text-danger"></div>
            @if (Model.Numero > 0)
            {
                <div class="mb-4 h4">N.º @Model.Numero.ToString().PadLeft(8, '0')</div>
            }

            <div class="form-group mt-2">
                <label class="font-weight-bold">* Cliente</label>
                @await Component.InvokeAsync("Dropdown",
                   new { list = ViewBag.ListCliente, htmlName = "ClienteId", codigo = Model.ClienteId, isSelect2 = true })
            </div>

            @if (Model.Numero > 0)
            {
                <div class="form-group">
                    <label class="font-weight-bold" asp-for="Status"></label><span class="text-danger">*</span>
                    <select asp-for="Status" asp-items="Html.GetEnumSelectList<OrceiPdf.Domain.Enum.EOrcamentoStatus>()">
                        <option selected="selected" value="">-- Selecione --</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
            }
            else
            {
                <input type="hidden" asp-for="Status" />
            }

            <div class="form-group">
                <label class="font-weight-bold" asp-for="DataValidade"></label><span class="text-danger">*</span>
                <input type="date" min="@DateTime.Now.ToString("yyyy-MM-dd")" name="DataValidade" id="DataValidade" class="form-control" value="@Model.DataValidade.ToString("yyyy-MM-dd")" />
                <span asp-validation-for="DataValidade" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label class="font-weight-bold">Observação</label>
                <textarea name="Observacao" class="form-control"></textarea>
                <span asp-validation-for="Observacao" class="text-danger"></span>
            </div>

            <div class="p-2">
                @await Component.InvokeAsync("OrcamentoItem", new { list = Model.OrcamentoItens })
            </div>
            <button type="submit" class="btn btn-primary"><i class="fas fa-save"></i> Salvar</button>
        </form>
    </div>
</div>
@await Component.InvokeAsync("ModalCrud")

<script>
    $(document).ready(function () {

        @if (Model.Numero > 0)
        {
            @:$('#Status').select2({ language: 'pt-BR', width: '100%' });
        }

        $("#form-crud").validate({
            rules: {
                ClienteId: {
                    required: true
                },
                Status: {
                    required: true
                },
                DataValidade: {
                    required: true
                }
            }
        });

    });
</script>
